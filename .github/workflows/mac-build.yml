name: Build MacOS

on:
  push

env:
  GCLIENT_EXTRA_ARGS: '--custom-var=checkout_mac=True --custom-var=host_os=mac --custom-var=host_cpu=arm64'
  IS_RELEASE: false

jobs:
  install-dependencies:
    runs-on: macos-13-xlarge

    steps:
    - name: Checkout Electron
      uses: actions/checkout@v4
      with:
        path: src/electron
    - name: Setup Node/NPM
      uses: actions/setup-node@v3
      with:
        node-version: 18.18.x
        cache: yarn
        cache-dependency-path: src/electron/yarn.lock
    - run: |
        cd src/electron
        node script/yarn install
    # step-depot-tools-get, L248
    - name: Get Depot Tools 
      run: |
        git clone --depth=1 https://chromium.googlesource.com/chromium/tools/depot_tools.git
        # remove ninjalog_uploader_wrapper.py from autoninja since we don't use it and it causes problems
        sed -i '' '/ninjalog_uploader_wrapper.py/d' ./depot_tools/autoninja
        # Ensure depot_tools does not update.
        test -d depot_tools && cd depot_tools
        touch .disable_auto_update
    - run: echo '$PWD/depot_tools' >> $GITHUB_PATH
    - run: echo 'export PATH="$PATH:'"$PWD"'/depot_tools"' >> $GITHUB_ENV
    - run: echo "$PATH"
    # step-gclient-sync, L287
    - name: Gclient Sync
      run: |
        # If we did not restore a complete sync then we need to sync for realz
        if [ ! -s "src/electron/.circle-sync-done" ]; then
          gclient config \
            --name "src/electron" \
            --unmanaged \
            $GCLIENT_EXTRA_ARGS \
            "$GITHUB_ACTION_REPOSITORY"

          ELECTRON_USE_THREE_WAY_MERGE_FOR_PATCHES=1 gclient sync --with_branch_heads --with_tags
          if [ "$IS_RELEASE" != "true" ]; then
            # Re-export all the patches to check if there were changes.
            python3 src/electron/script/export_all_patches.py src/electron/patches/config.json
            cd src/electron
            git update-index --refresh || true
            # TODO(vertedinde): Let's not stress on patchup right now, just sync it
            # if ! git diff-index --quiet HEAD --; then
            #   # There are changes to the patches. Make a git commit with the updated patches
            #   git add patches
            #   GIT_COMMITTER_NAME="PatchUp" GIT_COMMITTER_EMAIL="73610968+patchup[bot]@users.noreply.github.com" git commit -m "chore: update patches" --author="PatchUp <73610968+patchup[bot]@users.noreply.github.com>"
            #   # Export it
            #   mkdir -p ../../patches
            #   git format-patch -1 --stdout --keep-subject --no-stat --full-index > ../../patches/update-patches.patch
            #   if (node ./script/push-patch.js 2> /dev/null > /dev/null); then
            #     echo
            #     echo "======================================================================"
            #     echo "Changes to the patches when applying, we have auto-pushed the diff to the current branch"
            #     echo "A new CI job will kick off shortly"
            #     echo "======================================================================"
            #     exit 1
            #   else
            #     echo
            #     echo "======================================================================"
            #     echo "There were changes to the patches when applying."
            #     echo "Check the CI artifacts for a patch you can apply to fix it."
            #     echo "======================================================================"
            #     exit 1
            #   fi
            # fi
          fi
        fi